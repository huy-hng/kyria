#define RGB_SOLID &rgb_ug RGB_EFS_CMD 0
#define RGB_SWIRL &rgb_ug RGB_EFS_CMD 3

#define ORANGE   8
#define GREEN  118
#define CYAN   128
#define BLUE   192
#define INDIGO 256

#define BRIGHTNESS 30
#define SATURATION 100
#define DEFAULT_HUE CYAN

#define SET_HSB(hue, sat, bri) &rgb_ug RGB_COLOR_HSB(hue, sat, bri)

#define SET_HB(hue, bri)       SET_HSB(hue,         100, bri)
#define SET_SB(sat, bri)       SET_HSB(DEFAULT_HUE, sat, bri)

#define SET_HUE(hue)           SET_HSB(hue,         100, BRIGHTNESS)
#define SET_SAT(sat)           SET_HSB(DEFAULT_HUE, sat, BRIGHTNESS)
#define SET_BRI(bri)           SET_HSB(DEFAULT_HUE, 100, bri)

#define RESET_COLOR SET_HSB(DEFAULT_HUE, SATURATION, BRIGHTNESS)


#define HOLD_COLOR(name, behavior, before, after) \
ZMK_MACRO(name, bindings =                        \
    <&macro_press behavior >                      \
    ,<&macro_tap before >                         \
    ,<&macro_pause_for_release>                   \
    ,<&macro_tap after RESET_COLOR >              \
    ,<&macro_release behavior >                   \
;)

#define TOGL_COLOR(name, behavior) \
ZMK_MACRO(name, bindings =         \
    <&macro_tap behavior >         \
;)

/ {
    macros {
        ZMK_MACRO(empty_macro, bindings = <&macro_tap &none >;)
        // modifiers
        HOLD_COLOR(ctrl_color,     &kp LCTRL,  SET_SAT(80), )
        HOLD_COLOR(alt_color,      &kp LALT,   SET_SAT(80), )
        HOLD_COLOR(shift_color,    &kp LSHIFT, SET_SAT(80), )
        HOLD_COLOR(capsword_color, &capsword,  SET_SAT(80), )


        // layers
        HOLD_COLOR(mo_STICKY,   &mo STICKY,    SET_SB(0, 20), )
        HOLD_COLOR(lt_OS_ESC,   &lt OS ESC,    SET_HB(BLUE, 20) RGB_SOLID, RGB_SWIRL)
        HOLD_COLOR(media_fn_mo, &mo MEDIA_FN,  SET_HUE(GREEN)   RGB_SOLID, RGB_SWIRL)
        HOLD_COLOR(enc_lr_mo,   &mo ENC_LR,    SET_HUE(ORANGE)  RGB_SOLID, RGB_SWIRL)
        HOLD_COLOR(symbols_sl,  &sl SYMBOLS,   SET_HUE(CYAN)    RGB_SOLID, RGB_SWIRL)
        HOLD_COLOR(mo_SYMBOLS,  &mo SYMBOLS,   SET_HUE(CYAN)    RGB_SOLID, RGB_SWIRL)
        HOLD_COLOR(sl_NAVIPAD,  &sl NAVIPAD,   SET_HUE(INDIGO)  RGB_SOLID, &mo NUMPAD RGB_SWIRL)

        TOGL_COLOR(tog_NAVIPAD, &tog NAVIPAD   SET_HUE(INDIGO)  RGB_SOLID)
        TOGL_COLOR(to_BASE,     &to BASE       RGB_SWIRL RESET_COLOR)
    };
};
