#include <behaviors.dtsi>

/* #include <dt-bindings/zmk/mouse.h> */

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

// Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer
/* #define MO_TOG(layer) &mo_tog layer layer */

/ {
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings =
                <&mo>,
                <&tog>;
        };
        underscore_dash: underscore_dash {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDERSCORE_DASH";
            bindings =
                <&kp UNDERSCORE>,
                <&kp KP_MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings =
                <&kp BACKSPACE>,
                <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_lthumb1 {
            bindings = <&mo 9>;
            key-positions = <43 30>;
        };

        combo_right_thumb {
            bindings = <&trans>;
            key-positions = <46 33>;
        };

        combo_lthumb2 {
            bindings = <&trans>;
            key-positions = <31 44>;
        };

        combo_nav {
            bindings = <&mo 5>;
            key-positions = <30 43 13>;
            slow-release;
        };
    };

    macros {
        win_left: win_left {
            compatible = "zmk,behavior-macro";
            label = "WIN_LEFT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_ALT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /* default_layer { */
        /* 	bindings = < */
        /* 		&mo_tog 2 1     // &mo 2 on hold, &tog 1 on tap */
        /* 		MO_TOG(3)       // &mo 3 on hold, &tog 3 on tap */
        /* 	>; */
        /* }; */

        main {
            bindings = <
       &kp TAB  &kp Q  &kp W    &kp E     &kp R     &kp T                                                         &kp Y  &kp U        &kp I    &kp O     &kp P  &kp EQUAL
&mt LSHIFT ESC  &kp A  &kp S    &kp D     &kp F     &kp G                                                         &kp H  &kp J        &kp K    &kp L  &kp SEMI    &kp SQT
     &kp LCTRL  &kp Z  &kp X    &kp C     &kp V     &kp B      &mo 4      &kp LSHIFT  &kp LSHIFT  &kp LSHIFT      &kp N  &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp RCTRL
                              &kp DEL  &kp LGUI  &kp LALT  &kp SPACE  &kp LEFT_SHIFT   &bspc_del     &kp RET  &kp RCTRL  &none  &mo_tog 3 3
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                 &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                    &kp KP_EQUAL  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none  &trans  &trans  &trans           &trans  &kp KP_N1  &kp KP_N3  &kp KP_N3  &kp KP_SLASH  &trans
                        &trans  &trans  &trans  &none  &trans  &trans  &trans  &kp KP_NUMBER_0     &trans     &trans
            >;
        };

        colemak {
            bindings = <
&trans  &kp Q  &kp W   &kp F   &kp P   &kp B                                   &kp J   &kp H      &kp U    &kp Y   &kp SQT  &kp UNDER
&trans  &kp A  &kp R   &kp S   &kp T   &kp G                                   &kp M   &kp N      &kp E    &kp I     &kp O   &kp SEMI
&trans  &kp Z  &kp X   &kp C   &kp D   &kp V  &trans  &trans  &trans  &trans   &kp K   &kp L  &kp COMMA  &kp DOT  &kp FSLH     &trans
                      &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans
            >;
        };

        settings {
            bindings = <
&bootloader  &trans  &trans  &trans  &trans  &trans                                  &rgb_ug RGB_TOG           &trans           &trans           &trans           &trans  &bootloader
     &trans  &trans  &trans  &trans   &to 0   &to 2                                  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI       &trans
     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD       &trans
                             &trans  &trans  &trans  &trans  &trans  &trans  &trans           &trans           &trans           &trans
            >;
        };

        SYMBOLS {
            label = "symbols";
            bindings = <
&kp GRAVE   &kp LS(EXCL)    &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)                                  &kp LSHFT       &kp LPAR   &kp RPAR   &kp N0    &kp N0      &kp BSLH
&kp TILDE  &kp LS(CARET)  &kp LS(AMPS)   &kp LS(STAR)  &kp LS(LPAR)   &kp LS(RPAR)                                  &kp MINUS  &kp LS(UNDER)  &kp MINUS  &kp DOT  &kp LBRC  &kp LS(RBRC)
   &trans         &trans        &trans       &kp PLUS     &kp EQUAL      &kp MINUS  &trans  &trans  &trans  &trans    &kp DOT       &kp LBKT   &kp RBKT  &kp DOT   &kp DOT        &trans
                                               &trans        &trans         &trans  &trans  &trans  &trans  &trans     &trans         &trans     &trans
            >;
        };

        navigation {
            bindings = <
&none  &none  &none  &none  &none  &none                              &kp K_REDO  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &none
&none  &none  &none  &none  &none  &none                                   &none    &kp LEFT   &kp DOWN      &kp UP    &kp RIGHT  &none
&none  &none  &none  &none  &none  &none  &none  &none  &none  &none       &none    &kp HOME  &kp PG_DN   &kp PG_UP      &kp END  &none
                     &none  &none  &none  &none  &none  &none  &none       &none       &none      &none
            >;

            /* bindings = < */
            /*     &trans  &trans  &trans  &mmv MOVE_UP  &trans  &trans                                  &kp HOME  &kp PG_DN  &kp PG_UP    &kp END  &trans  &trans */
            /*     &trans  &trans  &mmv MOVE_LEFT &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans                                  &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &trans  &trans */
            /*     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans     &trans  &trans  &trans */
            /*     &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans */
            /* >; */
        };

        functions {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F13
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &kp F4  &kp F5  &kp F6  &kp F11  &kp F14
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12  &kp F15
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        window_manager {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &win_left  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans
            >;
        };

        layers {
            bindings = <
&trans       &trans       &trans       &trans       &trans  &trans                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &mo_tog 6 6  &mo_tog 5 5  &mo_tog 4 4  &mo_tog 1 1   &to 0                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans       &trans       &trans       &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                       &trans       &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        media {
            bindings = <
&none  &none  &none  &none  &none  &none                                                   &none       &none         &none         &none       &none  &none
&none  &none  &none  &none  &none  &none                                                   &none  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_NEXT  &none
&none  &none  &none  &none  &none  &none  &none  &none       &none             &none       &none       &none         &none         &none       &none  &none
                     &none  &none  &none  &none  &none  &kp K_STOP  &kp C_PLAY_PAUSE  &kp K_MUTE       &none         &none
            >;
        };
    };
};
