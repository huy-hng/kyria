#include <behaviors.dtsi>

/* #include <dt-bindings/zmk/mouse.h> */

#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

// Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer
/* #define MO_TOG(layer) &mo_tog layer layer */

/ {
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings =
                <&mo>,
                <&tog>;
        };
        dash_swap: dash_swap {
            compatible = "zmk,behavior-mod-morph";
            label = "DASH_SWAP";
            bindings =
                <&kp UNDERSCORE>,
                <&kp KP_MINUS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        bspc_del: bspc_del {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_DEL";
            bindings =
                <&kp BACKSPACE>,
                <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        nav_toggle: nav_toggle {
            compatible = "zmk,behavior-tap-dance";
            label = "NAV_TOGGLE";
            #binding-cells = <0>;
            bindings =
                <&mo 3>,
                <&tog 3>;
        };
        colon_swap: colon_swap {
            compatible = "zmk,behavior-mod-morph";
            label = "COLON_SWAP";
            bindings =
                <&kp COLON>,
                <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        lthumb1 {
            bindings = <&hyper>;
            key-positions = <43 30>;
            timeout-ms = <10>;
        };

        lthumb2 {
            bindings = <&trans>;
            key-positions = <31 44>;
            timeout-ms = <10>;
        };

        rthumb {
            bindings = <&kp ENTER>;
            key-positions = <46 33>;
            timeout-ms = <10>;
        };

        double_thumb {
            bindings = <&to 0>;
            key-positions = <30 43 33 46>;
        };

        home_thumbs {
            bindings = <&mo 4>;
            key-positions = <43 46>;
        };
    };

    macros {
        win_left: win_left {
            compatible = "zmk,behavior-macro";
            label = "WIN_LEFT";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_4>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_ALT>;
        };
        hyper: hyper {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            wait-ms = <0>;

            /* tap-ms = <10>; */

            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LSHIFT &kp LGUI &kp LEFT_ALT>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&kp LCTRL &kp LEFT_SHIFT &kp LEFT_GUI &kp LEFT_ALT>;

            wait-ms = <0>;
        };
        layer_menu: layer_menu {
            compatible = "zmk,behavior-macro";
            label = "LAYER_MENU";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&mo 1>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        colemak {
            bindings = <
           &kp TAB  &kp Q  &kp W    &kp F         &kp P     &kp B                                                  &kp J   &kp H      &kp U    &kp Y   &kp SQT   &dash_swap
&mt LEFT_SHIFT ESC  &kp A  &kp R    &kp S         &kp T     &kp G                                                  &kp M   &kp N      &kp E    &kp I     &kp O  &colon_swap
         &kp LCTRL  &kp Z  &kp X    &kp C         &kp D     &kp V  &nav_toggle     &trans   &trans     &trans      &kp K   &kp L  &kp COMMA  &kp DOT  &kp FSLH    &kp RCTRL
                                  &kp DEL  &kp LEFT_GUI  &kp LALT    &kp SPACE  &kp LSHFT  &kp RET  &bspc_del  &kp RCTRL  &hyper      &mo 9
            >;
        };

        qwerty {
            bindings = <
       &kp TAB  &kp Q  &kp W    &kp E     &kp R     &kp T                                                           &kp Y   &kp U      &kp I    &kp O        &kp P  &dash_swap
&mt LSHIFT ESC  &kp A  &kp S    &kp D     &kp F     &kp G                                                           &kp H   &kp J      &kp K    &kp L  &colon_swap      &trans
     &kp LCTRL  &kp Z  &kp X    &kp C     &kp V     &kp B  &nav_toggle      &kp LSHIFT  &kp LSHIFT  &kp LSHIFT      &kp N   &kp M  &kp COMMA  &kp DOT     &kp FSLH   &kp RCTRL
                              &kp DEL  &kp LGUI  &kp LALT    &kp SPACE  &kp LEFT_SHIFT   &kp ENTER   &bspc_del  &kp RCTRL  &hyper      &mo 9
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layers {
            bindings = <
&trans  &trans  &trans  &trans  &trans   &to 1                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans   &mo 6   &mo 5   &mo 4   &mo 3   &to 0                                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            label = "layers";
        };

        navipad {
            bindings = <
    &trans  &kp C_AC_CUT  &kp K_COPY      &kp UP  &kp K_PASTE  &trans                                  &kp KP_MULTIPLY  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &trans
    &trans        &trans    &kp LEFT    &kp DOWN    &kp RIGHT  &trans                                     &kp KP_EQUAL  &kp KP_N4  &kp KP_N5  &kp KP_N6   &kp KP_PLUS  &trans
&kp K_REDO    &kp K_UNDO   &kp K_CUT  &kp K_COPY  &kp K_PASTE  &trans   &to 0  &trans  &trans  &trans           &trans  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_SLASH  &trans
                                          &trans       &trans  &trans  &trans  &trans  &trans  &trans  &kp KP_NUMBER_0     &trans     &trans
            >;
        };

        sym {
            bindings = <
&kp GRAVE  &kp EXCL  &kp AT  &kp POUND  &kp DLLR  &kp PRCNT                                  &kp CARET   &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR    &trans
&kp TILDE    &trans  &trans     &trans    &trans     &trans                                  &kp MINUS  &kp UNDER  &kp EQUAL  &kp PLUS  &kp LBRC  &kp RBRC
   &trans    &trans  &trans     &trans    &trans     &trans  &trans  &trans  &trans  &trans     &trans   &kp LBKT   &kp RBKT  &kp BSLH  &kp PIPE    &trans
                                &trans    &trans     &trans  &trans  &trans  &trans  &trans     &trans     &trans     &trans
            >;

            label = "symbols";
        };

        navigation {
            label = "navigation";
            bindings = <
&none  &none     &none    &kp UP      &none  &none                              &kp K_REDO  &kp K_UNDO  &kp K_CUT  &kp K_COPY  &kp K_PASTE  &none
&none  &none  &kp LEFT  &kp DOWN  &kp RIGHT  &none                                   &none    &kp LEFT   &kp DOWN      &kp UP    &kp RIGHT  &none
&none  &none     &none     &none      &none  &none  &none  &none  &none  &none       &none    &kp HOME  &kp PG_DN   &kp PG_UP      &kp END  &none
                           &none      &none  &none  &none  &none  &none  &none       &none       &none      &none
            >;
        };

        f_keys {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &kp F7  &kp F8  &kp F9  &kp F10  &kp F13
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &kp F4  &kp F5  &kp F6  &kp F11  &kp F14
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &kp F1  &kp F2  &kp F3  &kp F12  &kp F15
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;

            /* bindings = < */
            /*     &trans  &trans  &trans  &mmv MOVE_UP  &trans  &trans                                  &kp HOME  &kp PG_DN  &kp PG_UP    &kp END  &trans  &trans */
            /*     &trans  &trans  &mmv MOVE_LEFT &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans                                  &kp LEFT   &kp DOWN     &kp UP  &kp RIGHT  &trans  &trans */
            /*     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans     &trans  &trans  &trans */
            /*     &trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans     &trans     &trans */
            /* >; */
        };

        window_manager {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans     &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                  &trans  &win_left  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans     &trans  &trans
            >;
        };

        media {
            bindings = <
&none  &none  &none  &none  &none  &none                                                   &none       &none         &none         &none       &none  &none
&none  &none  &none  &none  &none  &none                                                   &none  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_NEXT  &none
&none  &none  &none  &none  &none  &none  &none  &none       &none             &none       &none       &none         &none         &none       &none  &none
                     &none  &none  &none  &none  &none  &kp K_STOP  &kp C_PLAY_PAUSE  &kp K_MUTE       &none         &none
            >;
        };

        settings {
            bindings = <
 &bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                  &rgb_ug RGB_TOG           &trans           &trans           &trans           &trans  &bootloader
&out OUT_USB  &out OUT_BLE        &trans        &trans         &to 0         &to 1                                  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI       &trans
  &bt BT_CLR        &trans        &trans        &trans        &trans        &trans  &trans  &trans  &trans  &trans  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD       &trans
                                                &trans        &trans        &trans  &trans  &trans  &trans  &trans           &trans           &trans           &trans
            >;
        };

        alternate {
            bindings = <
           &kp TAB  &kp Q  &kp W    &kp F         &kp P     &kp B                                                  &kp J   &kp H      &kp U    &kp Y   &kp SQT   &dash_swap
&mt LEFT_SHIFT ESC  &kp A  &kp R    &kp S         &kp T     &kp G                                                  &kp M   &kp N      &kp E    &kp I     &kp O  &colon_swap
         &kp LCTRL  &kp Z  &kp X    &kp C         &kp D     &kp V  &nav_toggle     &trans   &trans     &trans      &kp K   &kp L  &kp COMMA  &kp DOT  &kp FSLH    &kp RCTRL
                                  &kp DEL  &kp LEFT_GUI  &kp LALT    &kp SPACE  &kp LSHFT  &kp RET  &bspc_del  &kp RCTRL  &hyper      &mo 9
            >;
        };
    };
};
